{
  "openapi": "3.0.1",
  "info": {
    "title": "The StudioC REST API",
    "description": "See https://github.com/TheStudioC/mes-api-docs for more information.",
    "version": "v1",
    "x-logo": {
      "url": "https://raw.githubusercontent.com/thestudioc/mes-api-docs/main/docs/logo.png",
      "altText": "The StudioC Logo"
    }
  },
  "servers": [
    {
      "url": "https://api.thestudioc.org"
    }
  ],
  "paths": {
    "/api_ext/v1/Audience/Find": {
      "post": {
        "tags": [
          "Audience"
        ],
        "summary": "Gets an audience by name.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The audience name to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Audience"
        ],
        "summary": "Gets an audience by name.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The audience name to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Audience/Get/{audienceId}": {
      "post": {
        "tags": [
          "Audience"
        ],
        "summary": "Gets an audience by Id.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "audienceId",
            "in": "path",
            "description": "The audience Id to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now."
          }
        }
      },
      "get": {
        "tags": [
          "Audience"
        ],
        "summary": "Gets an audience by Id.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "audienceId",
            "in": "path",
            "description": "The audience Id to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudienceResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now."
          }
        }
      }
    },
    "/api_ext/v1/Audience/MailchimpExport/{audienceId}": {
      "post": {
        "tags": [
          "Audience"
        ],
        "summary": "Exports an audience to Mailchimp.",
        "parameters": [
          {
            "name": "audienceId",
            "in": "path",
            "description": "The audience Id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "audienceName",
            "in": "query",
            "description": "The audience name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagName",
            "in": "query",
            "description": "The tag name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isCreate",
            "in": "query",
            "description": "Creates a list when true using the audience name, when false uses audience name to get existing listing.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation."
          },
          "400": {
            "description": "Failed operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now."
          }
        }
      }
    },
    "/api_ext/v1/Badges": {
      "post": {
        "tags": [
          "Badges"
        ],
        "summary": "Returns badges list defined for tenant.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.\r\n\nThis endpoint respects the ```Accept-Language``` header as specified [here](/accept-language)",
        "parameters": [
          {
            "name": "badgeType",
            "in": "query",
            "description": "Next Step = 1, Milestone = 2",
            "schema": {
              "$ref": "#/components/schemas/BadgeType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Badges"
        ],
        "summary": "Returns badges list defined for tenant.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.\r\n\nThis endpoint respects the ```Accept-Language``` header as specified [here](/accept-language)",
        "parameters": [
          {
            "name": "badgeType",
            "in": "query",
            "description": "Next Step = 1, Milestone = 2",
            "schema": {
              "$ref": "#/components/schemas/BadgeType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Dashboard/Links": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Returns dashboard links defined for tenant.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardLinkResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardLinkResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardLinkResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Returns dashboard links defined for tenant.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardLinkResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardLinkResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardLinkResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Dashboard/Settings": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Returns dashboard settings defined for tenant.",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingsModel"
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now."
          }
        }
      },
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Returns dashboard settings defined for tenant.",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingsModel"
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now."
          }
        }
      }
    },
    "/api_ext/v1/Messages": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Gets active messages by Ids, these messages will contain unpersonalized information.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageSearch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageSearch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageSearchResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageSearchResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageSearchResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Gets active messages by Ids, these messages will contain unpersonalized information.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageSearch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageSearch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MessageSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageSearchResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageSearchResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageSearchResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Person/{sourceId}": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Gets a member by source Id.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "description": "Person Source Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Gets a member by source Id.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "description": "Person Source Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Person/{sourceId}/Badges": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Gets a members badges",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.\r\n\nThis endpoint respects the ```Accept-Language``` header as specified [here](/accept-language)",
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "description": "Person Source Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "badgeType",
            "in": "query",
            "description": "Next Step = 1, Milestone = 2",
            "schema": {
              "$ref": "#/components/schemas/BadgeType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Gets a members badges",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.\r\n\nThis endpoint respects the ```Accept-Language``` header as specified [here](/accept-language)",
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "description": "Person Source Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "badgeType",
            "in": "query",
            "description": "Next Step = 1, Milestone = 2",
            "schema": {
              "$ref": "#/components/schemas/BadgeType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Person/Create": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Creates a new member for tenant.",
        "requestBody": {
          "description": "New person's information. IMPORTANT: If a person with the source ID already exists, no record is created!",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePersonRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResults"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResults"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResults"
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Person/Find": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Finds a person with case insensitive exact on matching first name and last name. If email and/or phone are provided then they must match exactly as well.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "firstname": {
                  "style": "form"
                },
                "lastname": {
                  "style": "form"
                },
                "email": {
                  "style": "form"
                },
                "phone": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonFindResult"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonFindResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonFindResult"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Person/{sourceId}/Groups": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Gets a members groups.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "description": "Person Source Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Gets a members groups.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "description": "Person Source Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Person/{sourceId}/Messages/{adtype}": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Gets a members messages by given ad type, limited by take size (default 6). Important, in cases of all ad type, the take size may not include all types depending on priority sorting.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "description": "Person Source Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "adtype",
            "in": "path",
            "description": "Message type. Values: news, personal, all",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "The number of messages to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 6
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardMessageResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardMessageResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardMessageResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Person/AnonymousMessages": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Gets an anonymous members messages limited by take size (default 6).",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "description": "The number of messages to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 6
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardMessageResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardMessageResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DashboardMessageResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Person/{sourceId}/Traits": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Gets a members traits.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "description": "Person Source Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonTraitResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonTraitResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonTraitResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Gets a members traits.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "description": "Person Source Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonTraitResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonTraitResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonTraitResponse"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Person/{sourceId}/Checkins": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Gets a members available checkins.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "description": "Person Source Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CheckinResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CheckinResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CheckinResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Person/{sourceId}/SaveCheckin": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Saves a members checkin.",
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "description": "Person Source Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkinId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "result": {
                    "type": "string"
                  },
                  "serviceType": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "checkinId": {
                  "style": "form"
                },
                "result": {
                  "style": "form"
                },
                "serviceType": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation."
          },
          "400": {
            "description": "Failed operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Person/{sourceId}/get-token": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Generates a token to allow members to view their dashboard when embedded in other applications.",
        "parameters": [
          {
            "name": "sourceId",
            "in": "path",
            "description": "Person Source Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Person/get-tracking-token": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Generates a tracking token which can be applied to user actions.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourceId": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "encoding": {
                "sourceId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Poll/Submit": {
      "post": {
        "tags": [
          "Poll"
        ],
        "summary": "Submits a poll result",
        "requestBody": {
          "description": "PollRequest submission",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PollRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PollRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PollRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Poll/Results/Html": {
      "post": {
        "tags": [
          "Poll"
        ],
        "summary": "Gets an HTML version of a poll for given member Id.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "formid": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "memberid": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "encoding": {
                "formid": {
                  "style": "form"
                },
                "memberid": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Poll/Results": {
      "post": {
        "tags": [
          "Poll"
        ],
        "summary": "Gets the results of a poll.",
        "description": "The API returns data using the [JSON API Specification](https://jsonapi.org/), which differs slightly from the provided example.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "pollId": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "encoding": {
                "pollId": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PollResults"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PollResults"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PollResults"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Tracking/DashboardView": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "Tracks dashboard view for given memberId.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "memberid": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "browser": {
                    "type": "string"
                  },
                  "isMobile": {
                    "type": "boolean"
                  }
                }
              },
              "encoding": {
                "memberid": {
                  "style": "form"
                },
                "browser": {
                  "style": "form"
                },
                "isMobile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation."
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Tracking/Message": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "Tracks message view for given memberId.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "memberid": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "messageid": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "trackingType": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "memberid": {
                  "style": "form"
                },
                "messageid": {
                  "style": "form"
                },
                "trackingType": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation."
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Tracking/Badge": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "Tracks badge view for given memberId.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "memberid": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "badgeid": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "trackingType": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "memberid": {
                  "style": "form"
                },
                "badgeid": {
                  "style": "form"
                },
                "trackingType": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation."
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api_ext/v1/Tracking/Link": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "Tracks link for given memberId.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "memberid": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "linkid": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "encoding": {
                "memberid": {
                  "style": "form"
                },
                "linkid": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation."
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/tracking_api/v1/Tracking/DashboardView": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "Tracks dashboard view for authenticated user.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "browser": {
                    "type": "string"
                  },
                  "isMobile": {
                    "type": "boolean"
                  }
                }
              },
              "encoding": {
                "browser": {
                  "style": "form"
                },
                "isMobile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation."
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/tracking_api/v1/Tracking/Message": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "Tracks message view for authenticated user.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "messageid": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "trackingType": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "messageid": {
                  "style": "form"
                },
                "trackingType": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation."
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/tracking_api/v1/Tracking/Badge": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "Tracks badge view for authenticated user.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "badgeid": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "trackingType": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "badgeid": {
                  "style": "form"
                },
                "trackingType": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation."
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/tracking_api/v1/Tracking/Link": {
      "post": {
        "tags": [
          "Tracking"
        ],
        "summary": "Tracks link for authenticated user.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "linkid": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "encoding": {
                "linkid": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation."
          },
          "500": {
            "description": "Oops! Can't complete the request now.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AudienceResponse": {
        "type": "object",
        "properties": {
          "audienceId": {
            "type": "integer",
            "format": "int64"
          },
          "audienceName": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BadgeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "badgeName": {
            "type": "string",
            "nullable": true
          },
          "badgeIcon": {
            "type": "string",
            "nullable": true
          },
          "badgeOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "badgeGoal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "badgeGoalPercent": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "goalStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "goalEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rolloverHeadlineOn": {
            "type": "string",
            "nullable": true
          },
          "rolloverHeadlineOff": {
            "type": "string",
            "nullable": true
          },
          "rolloverDescOn": {
            "type": "string",
            "nullable": true
          },
          "rolloverDescOff": {
            "type": "string",
            "nullable": true
          },
          "linkTextOn": {
            "type": "string",
            "nullable": true
          },
          "linkTextOff": {
            "type": "string",
            "nullable": true
          },
          "linkUrlOn": {
            "type": "string",
            "nullable": true
          },
          "linkUrlOff": {
            "type": "string",
            "nullable": true
          },
          "badgeLogic": {
            "type": "string",
            "nullable": true
          },
          "badgeType": {
            "type": "integer",
            "format": "int32"
          },
          "badgeTypeName": {
            "type": "string",
            "nullable": true
          },
          "badgeOn": {
            "type": "boolean"
          },
          "cultureCode": {
            "type": "string",
            "nullable": true
          },
          "isDefaultCulture": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BadgeStyles": {
        "type": "object",
        "properties": {
          "borderColor": {
            "type": "string",
            "nullable": true
          },
          "borderWidth": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "string",
            "nullable": true
          },
          "completeColor": {
            "type": "string",
            "nullable": true
          },
          "notCompleteColor": {
            "type": "string",
            "nullable": true
          },
          "popoverBGColor": {
            "type": "string",
            "nullable": true
          },
          "popoverBodyColor": {
            "type": "string",
            "nullable": true
          },
          "popoverHeadlineColor": {
            "type": "string",
            "nullable": true
          },
          "popoverCTAColor": {
            "type": "string",
            "nullable": true
          },
          "useModal": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BadgeType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "Badge Types: Next Step = 1, Milestone = 2",
        "format": "int32"
      },
      "ButtonStyles": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "borderColor": {
            "type": "string",
            "nullable": true
          },
          "borderWidth": {
            "type": "string",
            "nullable": true
          },
          "borderRadius": {
            "type": "string",
            "nullable": true
          },
          "display": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckinResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "eventName": {
            "type": "string",
            "nullable": true
          },
          "messageText": {
            "type": "string",
            "nullable": true
          },
          "button1Text": {
            "type": "string",
            "nullable": true
          },
          "button1Value": {
            "type": "string",
            "nullable": true
          },
          "button2Text": {
            "type": "string",
            "nullable": true
          },
          "button2Value": {
            "type": "string",
            "nullable": true
          },
          "button3Value": {
            "type": "string",
            "nullable": true
          },
          "serviceTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePersonRequest": {
        "type": "object",
        "properties": {
          "sourceId": {
            "type": "integer",
            "description": "Source System Id",
            "format": "int64"
          },
          "personAge": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "personBirthday": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isDeceased": {
            "type": "boolean",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "nullable": true
          },
          "employer": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "isStaff": {
            "type": "boolean",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "familyId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "grade": {
            "type": "string",
            "nullable": true
          },
          "birthYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "birthMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "birthDay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "connectionStatusValueId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "maritalStatusValueId": {
            "type": "string",
            "nullable": true
          },
          "primaryCampusId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Creates a person record using the API"
      },
      "DashboardLinkResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "linkText": {
            "type": "string",
            "nullable": true
          },
          "linkUrl": {
            "type": "string",
            "nullable": true
          },
          "linkOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "showDesktopOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DashboardMessageResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "messageType": {
            "type": "string",
            "nullable": true
          },
          "headline": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "videoLink": {
            "type": "string",
            "nullable": true
          },
          "copyHtml": {
            "$ref": "#/components/schemas/HtmlString"
          },
          "linkText": {
            "type": "string",
            "nullable": true
          },
          "linkUrl": {
            "type": "string",
            "nullable": true
          },
          "interstitialEnabled": {
            "type": "boolean"
          },
          "interstitialHeadline": {
            "type": "string",
            "nullable": true
          },
          "interstitialCopyHtml": {
            "$ref": "#/components/schemas/HtmlString"
          },
          "interstitialImage": {
            "type": "string",
            "nullable": true
          },
          "interstitialLinkText": {
            "type": "string",
            "nullable": true
          },
          "interstitialLinkUrl": {
            "type": "string",
            "nullable": true
          },
          "interstitialVideoLink": {
            "type": "string",
            "nullable": true
          },
          "poll": {
            "$ref": "#/components/schemas/PollResponse"
          }
        },
        "additionalProperties": false
      },
      "DashboardSettingsModel": {
        "type": "object",
        "properties": {
          "greetingTextTypography": {
            "$ref": "#/components/schemas/TypographyStyles"
          },
          "sectionTitlesTypography": {
            "$ref": "#/components/schemas/TypographyStyles"
          },
          "messageTitlesTypography": {
            "$ref": "#/components/schemas/TypographyStyles"
          },
          "messageBodyTypography": {
            "$ref": "#/components/schemas/TypographyStyles"
          },
          "messageButtonTypography": {
            "$ref": "#/components/schemas/TypographyStyles"
          },
          "messageButtonStyles": {
            "$ref": "#/components/schemas/ButtonStyles"
          },
          "quickLinksTypography": {
            "$ref": "#/components/schemas/TypographyStyles"
          },
          "quickLinkButtonStyles": {
            "$ref": "#/components/schemas/ButtonStyles"
          },
          "nextStepStyles": {
            "$ref": "#/components/schemas/BadgeStyles"
          },
          "milestoneStyles": {
            "$ref": "#/components/schemas/BadgeStyles"
          },
          "headerImageStyles": {
            "$ref": "#/components/schemas/HeaderImageStyles"
          },
          "messageCardStyles": {
            "$ref": "#/components/schemas/ButtonStyles"
          },
          "profilePictureStyles": {
            "$ref": "#/components/schemas/ProfilePictureStyles"
          },
          "loginPagesInfo": {
            "$ref": "#/components/schemas/LoginPagesInfo"
          },
          "emailFormInfo": {
            "$ref": "#/components/schemas/EmailFormInfo"
          },
          "groupInterfaceInfo": {
            "$ref": "#/components/schemas/GroupInterfaceInfo"
          },
          "termsofServiceLink": {
            "type": "string",
            "nullable": true
          },
          "privacyLink": {
            "type": "string",
            "nullable": true
          },
          "editProfileLink": {
            "type": "string",
            "nullable": true
          },
          "pageBgColor": {
            "type": "string",
            "nullable": true
          },
          "cardLinkColor": {
            "type": "string",
            "nullable": true
          },
          "cardBorderRadiusImageOnly": {
            "type": "boolean"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailFormInfo": {
        "type": "object",
        "properties": {
          "unsubscribeHeading": {
            "type": "string",
            "nullable": true
          },
          "unsubscribeCopy": {
            "type": "string",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "smsPreferencesCopy": {
            "type": "string",
            "nullable": true
          },
          "emailPreferencesCopy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupInterfaceInfo": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "groupTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "badgeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "hideBadges": {
            "type": "boolean"
          },
          "displayToMembers": {
            "type": "boolean"
          },
          "manageGroupUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "cmsGroupName": {
            "type": "string",
            "nullable": true
          },
          "groupType": {
            "type": "string",
            "nullable": true
          },
          "groupStatus": {
            "type": "string",
            "nullable": true
          },
          "sourceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isLeader": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HeaderImageStyles": {
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string",
            "nullable": true
          },
          "backgroundImage": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HtmlString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginPagesInfo": {
        "type": "object",
        "properties": {
          "memberWelcomeGreeting": {
            "type": "string",
            "nullable": true
          },
          "memberVerificationGreeting": {
            "type": "string",
            "nullable": true
          },
          "memberSignupUrl": {
            "type": "string",
            "nullable": true
          },
          "memberVerificationSignupUrl": {
            "type": "string",
            "nullable": true
          },
          "helpPageUrl": {
            "type": "string",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberTypeResponse": {
        "type": "object",
        "properties": {
          "memberTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "memberTypeDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageSearch": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageSearchResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "adTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "adStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "campaignId": {
            "type": "integer",
            "format": "int64"
          },
          "audienceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "headline": {
            "type": "string",
            "nullable": true
          },
          "copy": {
            "type": "string",
            "nullable": true
          },
          "linkText": {
            "type": "string",
            "nullable": true
          },
          "linkUrl": {
            "type": "string",
            "nullable": true
          },
          "interstitialEnabled": {
            "type": "boolean"
          },
          "interstitialImage": {
            "type": "string",
            "nullable": true
          },
          "interstitialHeadline": {
            "type": "string",
            "nullable": true
          },
          "interstitialCopy": {
            "type": "string",
            "nullable": true
          },
          "interstitialLinkText": {
            "type": "string",
            "nullable": true
          },
          "interstitialLinkUrl": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "priority1": {
            "type": "integer",
            "format": "int32"
          },
          "priority2": {
            "type": "integer",
            "format": "int32"
          },
          "lastPublished": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "formData": {
            "type": "string",
            "nullable": true
          },
          "videoData": {
            "type": "string",
            "nullable": true
          },
          "scheduleData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonFamilyResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "familyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonFindResult": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Person source Id",
            "format": "int64"
          },
          "personId": {
            "type": "integer",
            "description": "Person StudioC Id",
            "format": "int64"
          },
          "link": {
            "type": "string",
            "description": "Person Link for API data retrieval",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonLocationResponse": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "locationName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "personId": {
            "type": "integer",
            "format": "int64"
          },
          "personFirstName": {
            "type": "string",
            "nullable": true
          },
          "personMiddleName": {
            "type": "string",
            "nullable": true
          },
          "personLastName": {
            "type": "string",
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "nullable": true
          },
          "personAge": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "personGender": {
            "type": "string",
            "nullable": true
          },
          "maritalStatus": {
            "type": "string",
            "nullable": true
          },
          "personPhone": {
            "type": "string",
            "nullable": true
          },
          "personEmail": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "employer": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "grade": {
            "type": "string",
            "nullable": true
          },
          "sourceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "memberType_Id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "isStaff": {
            "type": "boolean",
            "nullable": true
          },
          "isDeceased": {
            "type": "boolean",
            "nullable": true
          },
          "personBirthday": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "baptismDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "marriageDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "membershipDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "family": {
            "$ref": "#/components/schemas/PersonFamilyResponse"
          },
          "location": {
            "$ref": "#/components/schemas/PersonLocationResponse"
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypeResponse"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonResults": {
        "type": "object",
        "properties": {
          "personid": {
            "type": "integer",
            "format": "int64",
            "deprecated": true
          },
          "personId": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PersonTraitResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "traitName": {
            "type": "string",
            "nullable": true
          },
          "sourceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "numberFormatted": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Poll": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "pollType": {
            "type": "string",
            "nullable": true
          },
          "includeOther": {
            "type": "boolean"
          },
          "showResults": {
            "type": "boolean"
          },
          "submitButton": {
            "type": "string",
            "nullable": true
          },
          "submitMsg": {
            "type": "string",
            "nullable": true
          },
          "completed": {
            "type": "boolean"
          },
          "answers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PollRequest": {
        "type": "object",
        "properties": {
          "pollid": {
            "type": "integer",
            "format": "int64"
          },
          "memberid": {
            "type": "integer",
            "format": "int64"
          },
          "pollresults": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "other": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PollResponse": {
        "type": "object",
        "properties": {
          "poll": {
            "$ref": "#/components/schemas/Poll"
          },
          "results": {
            "$ref": "#/components/schemas/PollResults"
          }
        },
        "additionalProperties": false
      },
      "PollResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PollResults": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PollResult"
            },
            "nullable": true
          },
          "totalResponses": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProfilePictureStyles": {
        "type": "object",
        "properties": {
          "borderColor": {
            "type": "string",
            "nullable": true
          },
          "borderWidth": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TypographyStyles": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "nullable": true
          },
          "fontFamily": {
            "type": "string",
            "nullable": true
          },
          "fontSize": {
            "type": "string",
            "nullable": true
          },
          "fontWeight": {
            "type": "string",
            "nullable": true
          },
          "fontStyle": {
            "type": "string",
            "nullable": true
          },
          "textTransform": {
            "type": "string",
            "nullable": true
          },
          "textDecoration": {
            "type": "string",
            "nullable": true
          },
          "letterSpacing": {
            "type": "string",
            "nullable": true
          },
          "textAlign": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}